{
  "version": 3,
  "sources": ["../bundle-WKXZR7/checked-fetch.js", "../../../node_modules/itty-router/dist/itty-router.mjs", "../../../src/utils/randomInteger/index.ts", "../../../src/handlers/absences/index.ts", "../../../src/handlers/conflicts/index.ts", "../../../src/server.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-WKXZR7/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-WKXZR7/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/dineshraj/dev/brighthr-front-end-tech-task-senior/.wrangler/tmp/dev-kRw5zf",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "const e=({base:e=\"\",routes:r=[]}={})=>({__proto__:new Proxy({},{get:(a,o,t)=>(a,...p)=>r.push([o.toUpperCase(),RegExp(`^${(e+a).replace(/(\\/?)\\*/g,\"($1.*)?\").replace(/(\\/$)|((?<=\\/)\\/)/,\"\").replace(/(:(\\w+)\\+)/,\"(?<$2>.*)\").replace(/:(\\w+)(\\?)?(\\.)?/g,\"$2(?<$1>[^/]+)$2$3\").replace(/\\.(?=[\\w(])/,\"\\\\.\").replace(/\\)\\.\\?\\(([^\\[]+)\\[\\^/g,\"?)\\\\.?($1(?<=\\\\.)[^\\\\.\")}/*$`),p])&&t}),routes:r,async handle(e,...a){let o,t,p=new URL(e.url),l=e.query={};for(let[e,r]of p.searchParams)l[e]=void 0===l[e]?r:[l[e],r].flat();for(let[l,s,c]of r)if((l===e.method||\"ALL\"===l)&&(t=p.pathname.match(s))){e.params=t.groups||{};for(let r of c)if(void 0!==(o=await r(e.proxy||e,...a)))return o}}});export{e as Router};\n", "export function mulberry32(a: number) {\n  return function () {\n    var t = (a += 0x6d2b79f5);\n    t = Math.imul(t ^ (t >>> 15), t | 1);\n    t ^= t + Math.imul(t ^ (t >>> 7), t | 61);\n    return ((t ^ (t >>> 14)) >>> 0) / 4294967296;\n  };\n}\n\nconst random = mulberry32(42);\n\nfunction getRandomInteger(max: number) {\n  return Math.floor(random() * max);\n}\n\nexport default getRandomInteger;\n", "const names = [\n  {\n    firstName: \"Jabez\",\n    lastName: \"Nasser\",\n    id: \"24a9352b-cf35-4e00-b4c9-403546d7bea8\",\n  },\n  {\n    firstName: \"Isla\",\n    lastName: \"Watts\",\n    id: \"08335a8f-1b4f-4d9b-82a8-46fa20d48f2d\",\n  },\n  {\n    firstName: \"Malaysia\",\n    lastName: \"Krueger\",\n    id: \"f1128070-8fc9-4ccb-8657-f5e1c7cacad9\",\n  },\n  {\n    firstName: \"Kylei\",\n    lastName: \"Castanon\",\n    id: \"8d0593d5-de4a-48c9-afa5-55127c0d349d\",\n  },\n  {\n    firstName: \"Rheagan\",\n    lastName: \"Hartfield\",\n    id: \"59f7f608-05ad-4160-84b4-56800acfec3f\",\n  },\n  {\n    firstName: \"Amiah\",\n    lastName: \"Fenton\",\n    id: \"6ebff517-f398-4d23-9ed3-a0f14bfa3858\",\n  },\n  {\n    firstName: \"Kavion\",\n    lastName: \"Melchor\",\n    id: \"c7211b4f-7761-4012-a8a7-24e870227428\",\n  },\n  {\n    firstName: \"Regan\",\n    lastName: \"Quan\",\n    id: \"c8010a64-4fc3-4da4-9181-48a17e9b3329\",\n  },\n  {\n    firstName: \"Reuben\",\n    lastName: \"Keene\",\n    id: \"8c6d90a5-6636-46f9-93de-daa172b7496f\",\n  },\n  {\n    firstName: \"Wesley\",\n    lastName: \"Alvey\",\n    id: \"3c2d82f1-660e-44ec-b25a-756baa6d0155\",\n  },\n  {\n    firstName: \"Alexi\",\n    lastName: \"Schramm\",\n    id: \"8be1c549-fb91-4c8f-9cfe-5b5c017f26bf\",\n  },\n  {\n    firstName: \"Zemirah\",\n    lastName: \"Suber\",\n    id: \"8ebe3d34-a20b-45eb-ae48-a2d40bdc63bc\",\n  },\n  {\n    firstName: \"Rahaf\",\n    lastName: \"Deckard\",\n    id: \"2ea05a52-4e31-450d-bbc4-5a6c73167d17\",\n  },\n  {\n    firstName: \"Raniya\",\n    lastName: \"Otte\",\n    id: \"e10058e4-3383-466b-91d8-1ea5bf1acf0f\",\n  },\n  {\n    firstName: \"Stacie\",\n    lastName: \"Chancey\",\n    id: \"23d9845c-8b03-4987-ac9e-98778100d4b8\",\n  },\n  {\n    firstName: \"Josemaria\",\n    lastName: \"Embrey\",\n    id: \"6dc958b7-0aea-45d6-b4cc-ce384815dc17\",\n  },\n  {\n    firstName: \"Enya\",\n    lastName: \"Behm\",\n    id: \"84502153-69e6-4561-b2de-8f21f97530d3\",\n  },\n  {\n    firstName: \"Shrey\",\n    lastName: \"Frederickson\",\n    id: \"303aacc8-e587-4801-929a-ad7ce933ee03\",\n  },\n  {\n    firstName: \"Ryland\",\n    lastName: \"Sears\",\n    id: \"6ed7cc5b-4a79-4802-a002-7918efc2d416\",\n  },\n  {\n    firstName: \"Meryl\",\n    lastName: \"Dreher\",\n    id: \"8a396169-fb8c-4478-b5e9-4f1b14a01cf8\",\n  },\n];\n\nimport getRandomInteger from \"../../utils/randomInteger/\";\n\nconst startOf2020 = 1577836800000;\n\nconst date = new Date();\n\nfunction getDate() {\n  const newDate = new Date();\n  newDate.setTime(1577836800000 + getRandomInteger(31556926000 * 4));\n  return newDate.toISOString();\n}\n\nfunction absenceType() {\n  const rnd = getRandomInteger(200);\n\n  if (rnd > 199) {\n    return \"FAMILY\";\n  }\n\n  if (rnd > 190) {\n    return \"COMPASSIONATE_LEAVE\";\n  }\n\n  if (rnd > 180) {\n    return \"MEDICAL\";\n  }\n\n  if (rnd > 160) {\n    return \"SICKNESS\";\n  }\n\n  return \"ANNUAL_LEAVE\";\n}\n\nfunction getName() {\n  return names[getRandomInteger(19)];\n}\n\nconst absences = Array(5000)\n  .fill({})\n  .map((_, i) => ({\n    id: i,\n    startDate: getDate(),\n    days: getRandomInteger(21),\n    absenceType: absenceType(),\n    employee: getName(),\n    approved: getRandomInteger(10) >= 9 ? false : true,\n  }));\n\nconst Absences = ({ query: { amount = 20 } }) => {\n  const body = JSON.stringify(absences.slice(0, amount));\n\n  return new Response(body, {\n    headers: {\n      \"Content-type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Methods\": \"GET,HEAD,POST,OPTIONS\",\n      \"Access-Control-Max-Age\": \"86400\",\n    },\n  });\n};\n\nexport default Absences;\n", "import { RequestLike } from 'itty-router';\nimport { mulberry32 } from '../../utils/randomInteger/';\n\n\nconst Conflicts = (request: RequestLike) => {\n  const { id } = request.params;\n\n  const random = mulberry32(parseInt(id, 10));\n\n  const body = JSON.stringify({\n    conflicts: random() * 20 > 18\n  });\n\n  return new Response(body, {\n    headers: {\n      'Content-type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,HEAD,POST,OPTIONS',\n      'Access-Control-Max-Age': '86400'\n    }\n  });\n};\n\nexport default Conflicts;\n", "import { RequestLike, Router } from 'itty-router';\n\nimport Absences from './handlers/absences';\nimport Conflict from './handlers/conflicts';\n\nconst router = Router();\n\nconst handleRender = () => new Response('Hello from the server!');\n\nrouter\n  .get('/api/absences', Absences)\n  .get('/api/conflict/:id', Conflict)\n  .get('/', handleRender)\n  .get('*', () => new Response('Not found dude', { status: 404 }));\n\nexport default {\n  async fetch(request: RequestLike) {\n    return router.handle(request);\n  },\n};\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/dineshraj/dev/brighthr-front-end-tech-task-senior/src/server.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/dineshraj/dev/brighthr-front-end-tech-task-senior/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/dineshraj/dev/brighthr-front-end-tech-task-senior/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/dineshraj/dev/brighthr-front-end-tech-task-senior/src/server.ts\";\n\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/dineshraj/dev/brighthr-front-end-tech-task-senior/.wrangler/tmp/bundle-WKXZR7/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/dineshraj/dev/brighthr-front-end-tech-task-senior/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/dineshraj/dev/brighthr-front-end-tech-task-senior/.wrangler/tmp/bundle-WKXZR7/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/dineshraj/dev/brighthr-front-end-tech-task-senior/.wrangler/tmp/bundle-WKXZR7/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": ";;;;AAAA,IAAM,OAAO,oBAAI,IAAI;AAErB,SAAS,SAAS,SAAS,MAAM;AAChC,QAAM,MACL,mBAAmB,MAChB,UACA,IAAI;AAAA,KACH,OAAO,YAAY,WACjB,IAAI,QAAQ,SAAS,IAAI,IACzB,SACD;AAAA,EACH;AACH,MAAI,IAAI,QAAQ,IAAI,SAAS,SAAS,IAAI,aAAa,UAAU;AAChE,QAAI,CAAC,KAAK,IAAI,IAAI,SAAS,CAAC,GAAG;AAC9B,WAAK,IAAI,IAAI,SAAS,CAAC;AACvB,cAAQ;AAAA,QACP;AAAA,KACO,IAAI,SAAS;AAAA;AAAA,MACrB;AAAA,IACD;AAAA,EACD;AACD;AAnBS;AAqBT,WAAW,QAAQ,IAAI,MAAM,WAAW,OAAO;AAAA,EAC9C,MAAM,QAAQ,SAAS,UAAU;AAChC,UAAM,CAAC,SAAS,IAAI,IAAI;AACxB,aAAS,SAAS,IAAI;AACtB,WAAO,QAAQ,MAAM,QAAQ,SAAS,QAAQ;AAAA,EAC/C;AACD,CAAC;;;AC7BD,IAAM,IAAE,wBAAC,EAAC,MAAKA,KAAE,IAAG,QAAO,IAAE,CAAC,EAAC,IAAE,CAAC,OAAK,EAAC,WAAU,IAAI,MAAM,CAAC,GAAE,EAAC,KAAI,CAAC,GAAE,GAAE,MAAI,CAACC,OAAK,MAAI,EAAE,KAAK,CAAC,EAAE,YAAY,GAAE,OAAO,KAAKD,KAAEC,IAAG,QAAQ,YAAW,SAAS,EAAE,QAAQ,qBAAoB,EAAE,EAAE,QAAQ,cAAa,WAAW,EAAE,QAAQ,qBAAoB,oBAAoB,EAAE,QAAQ,eAAc,KAAK,EAAE,QAAQ,yBAAwB,wBAAwB,MAAM,GAAE,CAAC,CAAC,KAAG,EAAC,CAAC,GAAE,QAAO,GAAE,MAAM,OAAOD,OAAK,GAAE;AAAC,MAAI,GAAE,GAAE,IAAE,IAAI,IAAIA,GAAE,GAAG,GAAE,IAAEA,GAAE,QAAM,CAAC;AAAE,WAAO,CAACA,IAAEE,EAAC,KAAI,EAAE;AAAa,MAAEF,EAAC,IAAE,WAAS,EAAEA,EAAC,IAAEE,KAAE,CAAC,EAAEF,EAAC,GAAEE,EAAC,EAAE,KAAK;AAAE,WAAO,CAACC,IAAE,GAAE,CAAC,KAAI;AAAE,SAAIA,OAAIH,GAAE,UAAQ,UAAQG,QAAK,IAAE,EAAE,SAAS,MAAM,CAAC,IAAG;AAAC,MAAAH,GAAE,SAAO,EAAE,UAAQ,CAAC;AAAE,eAAQE,MAAK;AAAE,YAAG,YAAU,IAAE,MAAMA,GAAEF,GAAE,SAAOA,IAAE,GAAG,CAAC;AAAG,iBAAO;AAAA,IAAC;AAAC,EAAC,IAAzpB;;;ACAD,SAAS,WAAW,GAAW;AACpC,SAAO,WAAY;AACjB,QAAI,IAAK,KAAK;AACd,QAAI,KAAK,KAAK,IAAK,MAAM,IAAK,IAAI,CAAC;AACnC,SAAK,IAAI,KAAK,KAAK,IAAK,MAAM,GAAI,IAAI,EAAE;AACxC,aAAS,IAAK,MAAM,QAAS,KAAK;AAAA,EACpC;AACF;AAPgB;AAShB,IAAM,SAAS,WAAW,EAAE;AAE5B,SAAS,iBAAiB,KAAa;AACrC,SAAO,KAAK,MAAM,OAAO,IAAI,GAAG;AAClC;AAFS;AAIT,IAAO,wBAAQ;;;ACff,IAAM,QAAQ;AAAA,EACZ;AAAA,IACE,WAAW;AAAA,IACX,UAAU;AAAA,IACV,IAAI;AAAA,EACN;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,UAAU;AAAA,IACV,IAAI;AAAA,EACN;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,UAAU;AAAA,IACV,IAAI;AAAA,EACN;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,UAAU;AAAA,IACV,IAAI;AAAA,EACN;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,UAAU;AAAA,IACV,IAAI;AAAA,EACN;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,UAAU;AAAA,IACV,IAAI;AAAA,EACN;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,UAAU;AAAA,IACV,IAAI;AAAA,EACN;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,UAAU;AAAA,IACV,IAAI;AAAA,EACN;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,UAAU;AAAA,IACV,IAAI;AAAA,EACN;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,UAAU;AAAA,IACV,IAAI;AAAA,EACN;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,UAAU;AAAA,IACV,IAAI;AAAA,EACN;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,UAAU;AAAA,IACV,IAAI;AAAA,EACN;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,UAAU;AAAA,IACV,IAAI;AAAA,EACN;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,UAAU;AAAA,IACV,IAAI;AAAA,EACN;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,UAAU;AAAA,IACV,IAAI;AAAA,EACN;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,UAAU;AAAA,IACV,IAAI;AAAA,EACN;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,UAAU;AAAA,IACV,IAAI;AAAA,EACN;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,UAAU;AAAA,IACV,IAAI;AAAA,EACN;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,UAAU;AAAA,IACV,IAAI;AAAA,EACN;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,UAAU;AAAA,IACV,IAAI;AAAA,EACN;AACF;AAQA,SAAS,UAAU;AACjB,QAAM,UAAU,oBAAI,KAAK;AACzB,UAAQ,QAAQ,aAAgB,sBAAiB,aAAc,CAAC,CAAC;AACjE,SAAO,QAAQ,YAAY;AAC7B;AAJS;AAMT,SAAS,cAAc;AACrB,QAAM,MAAM,sBAAiB,GAAG;AAEhC,MAAI,MAAM,KAAK;AACb,WAAO;AAAA,EACT;AAEA,MAAI,MAAM,KAAK;AACb,WAAO;AAAA,EACT;AAEA,MAAI,MAAM,KAAK;AACb,WAAO;AAAA,EACT;AAEA,MAAI,MAAM,KAAK;AACb,WAAO;AAAA,EACT;AAEA,SAAO;AACT;AApBS;AAsBT,SAAS,UAAU;AACjB,SAAO,MAAM,sBAAiB,EAAE,CAAC;AACnC;AAFS;AAIT,IAAM,WAAW,MAAM,GAAI,EACxB,KAAK,CAAC,CAAC,EACP,IAAI,CAAC,GAAG,OAAO;AAAA,EACd,IAAI;AAAA,EACJ,WAAW,QAAQ;AAAA,EACnB,MAAM,sBAAiB,EAAE;AAAA,EACzB,aAAa,YAAY;AAAA,EACzB,UAAU,QAAQ;AAAA,EAClB,UAAU,sBAAiB,EAAE,KAAK,IAAI,QAAQ;AAChD,EAAE;AAEJ,IAAM,WAAW,wBAAC,EAAE,OAAO,EAAE,SAAS,GAAG,EAAE,MAAM;AAC/C,QAAM,OAAO,KAAK,UAAU,SAAS,MAAM,GAAG,MAAM,CAAC;AAErD,SAAO,IAAI,SAAS,MAAM;AAAA,IACxB,SAAS;AAAA,MACP,gBAAgB;AAAA,MAChB,+BAA+B;AAAA,MAC/B,gCAAgC;AAAA,MAChC,0BAA0B;AAAA,IAC5B;AAAA,EACF,CAAC;AACH,GAXiB;AAajB,IAAO,mBAAQ;;;ACjKf,IAAM,YAAY,wBAAC,YAAyB;AAC1C,QAAM,EAAE,GAAG,IAAI,QAAQ;AAEvB,QAAMI,UAAS,WAAW,SAAS,IAAI,EAAE,CAAC;AAE1C,QAAM,OAAO,KAAK,UAAU;AAAA,IAC1B,WAAWA,QAAO,IAAI,KAAK;AAAA,EAC7B,CAAC;AAED,SAAO,IAAI,SAAS,MAAM;AAAA,IACxB,SAAS;AAAA,MACP,gBAAgB;AAAA,MAChB,+BAA+B;AAAA,MAC/B,gCAAgC;AAAA,MAChC,0BAA0B;AAAA,IAC5B;AAAA,EACF,CAAC;AACH,GAjBkB;AAmBlB,IAAO,oBAAQ;;;AClBf,IAAM,SAAS,EAAO;AAEtB,IAAM,eAAe,6BAAM,IAAI,SAAS,wBAAwB,GAA3C;AAErB,OACG,IAAI,iBAAiB,gBAAQ,EAC7B,IAAI,qBAAqB,iBAAQ,EACjC,IAAI,KAAK,YAAY,EACrB,IAAI,KAAK,MAAM,IAAI,SAAS,kBAAkB,EAAE,QAAQ,IAAI,CAAC,CAAC;AAEjE,IAAO,iBAAQ;AAAA,EACb,MAAM,MAAM,SAAsB;AAChC,WAAO,OAAO,OAAO,OAAO;AAAA,EAC9B;AACF;;;ACjBA,IAAM,YAAwB,8BAAO,SAAS,KAAK,MAAM,kBAAkB;AAC1E,MAAI;AACH,WAAO,MAAM,cAAc,KAAK,SAAS,GAAG;AAAA,EAC7C,UAAE;AACD,QAAI;AACH,UAAI,QAAQ,SAAS,QAAQ,CAAC,QAAQ,UAAU;AAC/C,cAAM,SAAS,QAAQ,KAAK,UAAU;AACtC,eAAO,EAAE,MAAM,OAAO,KAAK,GAAG,MAAM;AAAA,QAAC;AAAA,MACtC;AAAA,IACD,SAASC,IAAP;AACD,cAAQ,MAAM,4CAA4CA,EAAC;AAAA,IAC5D;AAAA,EACD;AACD,GAb8B;AAe9B,IAAO,6CAAQ;;;ACRf,SAAS,YAAYC,IAAmB;AACvC,SAAO;AAAA,IACN,MAAMA,IAAG;AAAA,IACT,SAASA,IAAG,WAAW,OAAOA,EAAC;AAAA,IAC/B,OAAOA,IAAG;AAAA,IACV,OAAOA,IAAG,UAAU,SAAY,SAAY,YAAYA,GAAE,KAAK;AAAA,EAChE;AACD;AAPS;AAUT,IAAM,YAAwB,8BAAO,SAAS,KAAK,MAAM,kBAAkB;AAC1E,MAAI;AACH,WAAO,MAAM,cAAc,KAAK,SAAS,GAAG;AAAA,EAC7C,SAASA,IAAP;AACD,UAAM,QAAQ,YAAYA,EAAC;AAC3B,WAAO,SAAS,KAAK,OAAO;AAAA,MAC3B,QAAQ;AAAA,MACR,SAAS,EAAE,+BAA+B,OAAO;AAAA,IAClD,CAAC;AAAA,EACF;AACD,GAV8B;AAY9B,IAAO,2CAAQ;;;ACzBJ,IAAM,mCAAmC;AAAA,EAE9B;AAAA,EAAyB;AAC3C;AACA,IAAO,sCAAQ;;;ACcnB,IAAM,wBAAsC,CAAC;AAKtC,SAAS,uBAAuB,MAAqC;AAC3E,wBAAsB,KAAK,GAAG,KAAK,KAAK,CAAC;AAC1C;AAFgB;AAShB,SAAS,uBACR,SACA,KACA,KACA,UACA,iBACsB;AACtB,QAAM,CAAC,MAAM,GAAG,IAAI,IAAI;AACxB,QAAM,gBAAmC;AAAA,IACxC;AAAA,IACA,KAAK,YAAY,QAAQ;AACxB,aAAO,uBAAuB,YAAY,QAAQ,KAAK,UAAU,IAAI;AAAA,IACtE;AAAA,EACD;AACA,SAAO,KAAK,SAAS,KAAK,KAAK,aAAa;AAC7C;AAfS;AAiBF,SAAS,kBACf,SACA,KACA,KACA,UACA,iBACsB;AACtB,SAAO,uBAAuB,SAAS,KAAK,KAAK,UAAU;AAAA,IAC1D,GAAG;AAAA,IACH;AAAA,EACD,CAAC;AACF;AAXgB;;;AC3ChB,IAAM,iCAAN,MAAoE;AAAA,EAGnE,YACU,eACA,MACT,SACC;AAHQ;AACA;AAGT,SAAK,WAAW;AAAA,EACjB;AAAA,EARS;AAAA,EAUT,UAAU;AACT,QAAI,EAAE,gBAAgB,iCAAiC;AACtD,YAAM,IAAI,UAAU,oBAAoB;AAAA,IACzC;AAEA,SAAK,SAAS;AAAA,EACf;AACD;AAlBM;AAoBN,SAAS,oBAAoB,QAA0C;AAEtE,MACC,qCAAqC,UACrC,iCAAiC,WAAW,GAC3C;AACD,WAAO;AAAA,EACR;AAEA,aAAW,cAAc,kCAAkC;AAC1D,wBAAoB,UAAU;AAAA,EAC/B;AAEA,QAAM,kBAA+C,gCACpD,SACA,KACA,KACC;AACD,QAAI,OAAO,UAAU,QAAW;AAC/B,YAAM,IAAI,MAAM,6CAA6C;AAAA,IAC9D;AACA,WAAO,OAAO,MAAM,SAAS,KAAK,GAAG;AAAA,EACtC,GATqD;AAWrD,SAAO;AAAA,IACN,GAAG;AAAA,IACH,MAAM,SAAS,KAAK,KAAK;AACxB,YAAM,aAAyB,gCAAU,MAAM,MAAM;AACpD,YAAI,SAAS,eAAe,OAAO,cAAc,QAAW;AAC3D,gBAAM,aAAa,IAAI;AAAA,YACtB,KAAK,IAAI;AAAA,YACT,KAAK,QAAQ;AAAA,YACb,MAAM;AAAA,YAAC;AAAA,UACR;AACA,iBAAO,OAAO,UAAU,YAAY,KAAK,GAAG;AAAA,QAC7C;AAAA,MACD,GAT+B;AAU/B,aAAO,kBAAkB,SAAS,KAAK,KAAK,YAAY,eAAe;AAAA,IACxE;AAAA,EACD;AACD;AAxCS;AA0CT,SAAS,qBACR,OAC8B;AAE9B,MACC,qCAAqC,UACrC,iCAAiC,WAAW,GAC3C;AACD,WAAO;AAAA,EACR;AAEA,aAAW,cAAc,kCAAkC;AAC1D,wBAAoB,UAAU;AAAA,EAC/B;AAGA,SAAO,cAAc,MAAM;AAAA,IAC1B,mBAAyE,CACxE,SACA,KACA,QACI;AACJ,WAAK,MAAM;AACX,WAAK,MAAM;AACX,UAAI,MAAM,UAAU,QAAW;AAC9B,cAAM,IAAI,MAAM,sDAAsD;AAAA,MACvE;AACA,aAAO,MAAM,MAAM,OAAO;AAAA,IAC3B;AAAA,IAEA,cAA0B,CAAC,MAAM,SAAS;AACzC,UAAI,SAAS,eAAe,MAAM,cAAc,QAAW;AAC1D,cAAM,aAAa,IAAI;AAAA,UACtB,KAAK,IAAI;AAAA,UACT,KAAK,QAAQ;AAAA,UACb,MAAM;AAAA,UAAC;AAAA,QACR;AACA,eAAO,MAAM,UAAU,UAAU;AAAA,MAClC;AAAA,IACD;AAAA,IAEA,MAAM,SAAwD;AAC7D,aAAO;AAAA,QACN;AAAA,QACA,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,MACN;AAAA,IACD;AAAA,EACD;AACD;AAnDS;AAqDT,IAAI;AACJ,IAAI,OAAO,wCAAU,UAAU;AAC9B,kBAAgB,oBAAoB,mCAAK;AAC1C,WAAW,OAAO,wCAAU,YAAY;AACvC,kBAAgB,qBAAqB,mCAAK;AAC3C;AACA,IAAO,kCAAQ;",
  "names": ["e", "a", "r", "l", "random", "e", "e"]
}
